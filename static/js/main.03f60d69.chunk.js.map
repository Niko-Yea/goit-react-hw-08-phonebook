{"version":3,"sources":["redux/filter/filter-actions.js","redux/filter/filter-reducer.js","redux/auth/authApi.js","redux/contacts/phonebookApi.js","redux/auth/authSlice.js","redux/store.js","redux/auth/authSelectors.js","components/Layout/Layout.js","Views/HomePage/HomePageView.js","components/NavTabs/NavTabs.js","components/Routers/PrivateRouter.js","components/Routers/PublicRouter.js","Views/SigninView/SigninView.js","Views/SignupView/SignupView.js","components/ContactForm/ContactForm.js","components/ContactsLibrary/ContactItem.js","redux/filter/contactsSelector.js","components/ContactsLibrary/ContactsLibrary.js","components/ContactsLibrary/Filter.js","Views/ContactsView/ContactsView.js","Phonebook.js","index.js","components/Layout/styles.module.scss"],"names":["changeFilter","createAction","filterReducer","createReducer","filterAction","_","payload","authApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","prepareHeaders","headers","token","getState","authSlice","set","tagTypes","endpoints","builder","createNewUser","mutation","query","newUser","url","method","body","invalidatesTags","siginUser","userData","logOutUser","getCurrentUser","useCreateNewUserMutation","useSiginUserMutation","useLogOutUserMutation","useGetCurrentUserQuery","phonebookApi","createContact","newContact","deleteContact","contactId","fetchContacts","providesTags","useCreateContactMutation","useDeleteContactMutation","useFetchContactsQuery","createSlice","name","initialState","user","email","isLoggedIn","reducers","register","state","login","logout","refresh","action","actions","authPersistConfig","key","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","authSelectors","getIsLoggegIn","getToken","getUserName","Layout","children","id","className","styles","layout","useStyles","makeStyles","btn","marginRight","box","display","flexDirection","alignItems","HomePageView","useState","up","setUp","useSelector","classes","useEffect","Container","maxWidth","Box","Slide","direction","in","mountOnEnter","unmountOnExit","timeout","Typography","variant","component","color","Button","Link","to","theme","root","flexGrow","backgroundColor","palette","background","paper","usersLink","marginLeft","appBar","userBox","SimpleTabs","dispatch","useDispatch","userName","handleLogOutClick","a","data","AppBar","position","Toolbar","NavLink","align","onClick","PrivateRouter","routeProps","PublicRouter","restricted","redirectTo","shouldRedirect","input","borderBottom","linl","textDecoration","primary","dark","light","marginTop","spacing","avatar","margin","secondary","main","form","width","submit","SignIn","setEmail","password","setPassword","signinUser","handleSubmit","e","preventDefault","loginResponse","console","log","handleInputChange","target","value","CssBaseline","Avatar","noValidate","onSubmit","TextField","required","fullWidth","label","autoComplete","onChange","autoFocus","type","Grid","container","item","xs","SignUp","setName","registrationResponse","justifyContent","border","ContactForm","number","setNumber","contacts","open","setOpen","find","contact","toLowerCase","alert","resetState","hanleCloseModal","Dialog","onClose","PaperProps","style","DialogTitle","DialogContent","inputProps","DialogActions","ContactItem","contactsInList","index","isLoading","ListItem","button","ListItemAvatar","AccountCircle","ListItemText","primaryTypographyProps","secondaryTypographyProps","ListItemSecondaryAction","IconButton","CircularProgress","filter","lowerCaseString","includes","sort","b","scrollBar","borderRadius","ContactsLibrary","contactsSelector","filteredContacts","useMemo","innerElementType","List","height","document","getElementById","clientHeight","getNodeHeight","itemSize","itemCount","length","itemData","customListStyle","Filter","title","contsctsViewBox","infoViewBox","ContactsView","skipToken","isFetching","createTheme","Phonebook","ThemeProvider","fallback","exact","path","ReactDOM","render","loading","module","exports"],"mappings":"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","file":"static/js/main.03f60d69.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit'\n\nconst changeFilter = createAction('filter/changeFilter')\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { changeFilter }\n","import { createReducer } from '@reduxjs/toolkit'\nimport filterAction from './filter-actions'\n\nconst filterReducer = createReducer('', {\n  [filterAction.changeFilter]: (_, { payload }) => payload,\n})\n\nexport default filterReducer\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const authApi = createApi({\n  reducerPath: 'authApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://connections-api.herokuapp.com',\n    prepareHeaders: (headers, { getState }) => {\n      const token = getState().authSlice.token\n      if (token) {\n        headers.set('Authorization', `Bearer ${token}`)\n      }\n      return headers\n    },\n  }),\n\n  tagTypes: ['users', 'contacts'],\n\n  endpoints: builder => ({\n    createNewUser: builder.mutation({\n      query: newUser => ({\n        url: '/users/signup',\n        method: 'POST',\n        body: newUser,\n      }),\n      invalidatesTags: ['users'],\n    }),\n    siginUser: builder.mutation({\n      query: userData => ({\n        url: '/users/login',\n        method: 'POST',\n        body: userData,\n      }),\n      invalidatesTags: ['users'],\n    }),\n    logOutUser: builder.mutation({\n      query: () => ({\n        url: '/users/logout',\n        method: 'POST',\n      }),\n      invalidatesTags: ['users'],\n    }),\n    getCurrentUser: builder.query({\n      query: () => ({\n        url: '/users/current',\n        method: 'GET',\n        invalidatesTags: ['users'],\n      }),\n    }),\n  }),\n})\n\nexport const {\n  useCreateNewUserMutation,\n  useSiginUserMutation,\n  useLogOutUserMutation,\n  useGetCurrentUserQuery,\n} = authApi\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const phonebookApi = createApi({\n  reducerPath: 'phonebookApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://connections-api.herokuapp.com',\n    prepareHeaders: (headers, { getState }) => {\n      const token = getState().authSlice.token\n      if (token) {\n        headers.set('Authorization', `Bearer ${token}`)\n      }\n      return headers\n    },\n  }),\n\n  tagTypes: ['contacts'],\n\n  endpoints: builder => ({\n    createContact: builder.mutation({\n      query: newContact => ({\n        url: '/contacts',\n        method: 'POST',\n        body: newContact,\n      }),\n      invalidatesTags: ['contacts'],\n    }),\n    deleteContact: builder.mutation({\n      query: contactId => ({\n        url: `/contacts/${contactId}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['contacts'],\n    }),\n    fetchContacts: builder.query({\n      query: () => ({\n        url: '/contacts',\n        method: 'GET',\n      }),\n      providesTags: ['contacts'],\n    }),\n  }),\n})\n\nexport const {\n  useCreateContactMutation,\n  useDeleteContactMutation,\n  useFetchContactsQuery,\n} = phonebookApi\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n}\n\nconst authSlice = createSlice({\n  name: 'authSlice',\n  initialState,\n  reducers: {\n    register: (state, { payload }) => {\n      state.user.name = payload.user.name\n      state.user.email = payload.user.email\n      state.token = payload.token\n      state.isLoggedIn = true\n    },\n    login: (state, { payload }) => {\n      state.user.name = payload.user.name\n      state.user.email = payload.user.email\n      state.token = payload.token\n      state.isLoggedIn = true\n    },\n    logout: (state, { payload }) => {\n      state.user.name = null\n      state.user.email = null\n      state.token = null\n      state.isLoggedIn = false\n    },\n    refresh: (state, action) => {\n      state.user = { ...action.payload }\n      state.isLoggedIn = true\n    },\n  },\n})\n\nexport const { register, login, logout, refresh } = authSlice.actions\nexport default authSlice.reducer\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport filterReducer from './filter/filter-reducer'\nimport { authApi } from './auth/authApi'\nimport { phonebookApi } from './contacts/phonebookApi'\nimport authSlice from './auth/authSlice'\n// import phonebookSlice from \"./contacts/phonebookSlice\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n}\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  authApi.middleware,\n  phonebookApi.middleware,\n]\n\nexport const store = configureStore({\n  reducer: {\n    [authApi.reducerPath]: authApi.reducer,\n    [phonebookApi.reducerPath]: phonebookApi.reducer,\n    authSlice: persistReducer(authPersistConfig, authSlice),\n    // phonebookSlice,\n    filterReducer,\n  },\n  middleware,\n\n  devTools: process.env.NODE_ENV === 'development',\n})\n\nexport const persistor = persistStore(store)\n\nexport const rootState = store.getState()\n","const getIsLoggegIn = state => state.authSlice.isLoggedIn\nconst getToken = state => state.authSlice.token\nconst getUserName = state => state.authSlice.user.name\n\nconst authSelectors = {\n  getIsLoggegIn,\n  getToken,\n  getUserName,\n}\nexport default authSelectors\n","import styles from './styles.module.scss'\nconst Layout = ({ children }) => {\n  return (\n    <div id={'layout'} className={styles.layout}>\n      {children}\n    </div>\n  )\n}\nexport default Layout\n","import authSelectors from '../../redux/auth/authSelectors'\nimport { useSelector } from 'react-redux'\n\nimport { Link } from 'react-router-dom'\nimport { Container, Box, Typography, Button, Slide } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core'\nimport { useEffect, useState } from 'react'\n\nconst useStyles = makeStyles({\n  btn: {\n    '&:not(:last-child)': {\n      marginRight: '10px',\n    },\n  },\n  box: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n    marginRight: '150px',\n  },\n})\n\nconst HomePageView = () => {\n  const [up, setUp] = useState(false)\n  const isLoggedIn = useSelector(authSelectors.getIsLoggegIn)\n  const classes = useStyles()\n\n  useEffect(() => {\n    setUp(true)\n    return () => setUp(false)\n  }, [])\n  return (\n    <Container maxWidth=\"xl\">\n      <Box display=\"flex\" className={classes.box}>\n        <Slide\n          direction=\"left\"\n          in={up}\n          mountOnEnter\n          unmountOnExit\n          timeout={1000}\n        >\n          <Typography variant=\"h1\" component=\"h1\" color=\"primary\">\n            Your Phonebook\n          </Typography>\n        </Slide>\n\n        {isLoggedIn ? (\n          <Slide\n            direction=\"up\"\n            in={up}\n            mountOnEnter\n            unmountOnExit\n            timeout={1500}\n          >\n            <Box>\n              <Button\n                className={classes.btn}\n                component={Link}\n                to=\"/contacts\"\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Get started\n              </Button>\n            </Box>\n          </Slide>\n        ) : (\n          <Slide\n            direction=\"up\"\n            in={up}\n            mountOnEnter\n            unmountOnExit\n            timeout={1500}\n          >\n            <Box>\n              <Button\n                className={classes.btn}\n                component={Link}\n                to=\"/login\"\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Signin\n              </Button>\n              <Button\n                className={classes.btn}\n                component={Link}\n                to=\"/registration\"\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Signup\n              </Button>\n            </Box>\n          </Slide>\n        )}\n      </Box>\n    </Container>\n  )\n}\n\nexport default HomePageView\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport authSelectors from '../../redux/auth/authSelectors'\nimport { useDispatch } from 'react-redux'\nimport { useLogOutUserMutation } from '../../redux/auth/authApi'\nimport { logout } from '../../redux/auth/authSlice'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport { NavLink } from 'react-router-dom'\nimport { Box, Button, Toolbar, Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  usersLink: {\n    marginLeft: 'auto',\n  },\n  btn: {\n    '&:not(last-child)': {\n      marginRight: '20px',\n    },\n  },\n  appBar: {\n    backgroundColor: 'rgb(64, 64, 64)',\n  },\n  userBox: {\n    marginLeft: 'auto',\n    alignItems: 'center',\n  },\n}))\n\nexport default function SimpleTabs() {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const [logOutUser] = useLogOutUserMutation()\n  const isLoggedIn = useSelector(authSelectors.getIsLoggegIn)\n  const userName = useSelector(authSelectors.getUserName)\n\n  const handleLogOutClick = async () => {\n    try {\n      const logOutResponse = await logOutUser()\n      if (logOutResponse.data) {\n        dispatch(logout())\n      }\n    } catch (error) {}\n  }\n\n  return (\n    <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n      <Toolbar>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          component={NavLink}\n          to=\"/\"\n          className={classes.btn}\n        >\n          home\n        </Button>\n\n        {isLoggedIn && (\n          <>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              component={NavLink}\n              to=\"/contacts\"\n              className={classes.btn}\n            >\n              contacts\n            </Button>\n            <Box display=\"flex\" className={classes.userBox}>\n              <Typography\n                align=\"center\"\n                variant=\"h5\"\n                color=\"secondary\"\n                className={classes.btn}\n              >\n                {userName}\n              </Typography>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                className={classes.btn}\n                onClick={handleLogOutClick}\n              >\n                logout\n              </Button>\n            </Box>\n          </>\n        )}\n      </Toolbar>\n    </AppBar>\n  )\n}\n","import { useSelector } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom'\nimport authSelectors from '../../redux/auth/authSelectors'\n\nconst PrivateRouter = ({ children, ...routeProps }) => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggegIn)\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to=\"/login\" />}\n    </Route>\n  )\n}\nexport default PrivateRouter\n","import { useSelector } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom'\nimport authSelectors from '../../redux/auth/authSelectors'\n\nconst PublicRouter = ({\n  restricted = false,\n  redirectTo = '/',\n  children,\n  ...routeProps\n}) => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggegIn)\n  const shouldRedirect = isLoggedIn && restricted\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  )\n}\n\nexport default PublicRouter\n","import React from 'react'\nimport { useSiginUserMutation } from '../../redux/auth/authApi'\nimport { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { login } from '../../redux/auth/authSlice'\nimport { Link } from 'react-router-dom'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\n\nconst useStyles = makeStyles(theme => ({\n  input: {\n    '& .MuiFormLabel-root': {\n      color: '#8eacbb',\n    },\n    '& .MuiInputBase-root': {\n      color: '#607d8b',\n    },\n    '& .MuiInput-underline:before': {\n      borderBottom: '1px solid #8eacbb',\n    },\n    '& .MuiInput-underline:hover:not(.Mui-disabled):before': {\n      borderBottom: '2px solid #34515e',\n    },\n  },\n  linl: {\n    textDecoration: 'none',\n    color: theme.palette.primary.dark,\n    '&:hover': {\n      color: theme.palette.primary.light,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}))\n\nexport default function SignIn() {\n  const classes = useStyles()\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n  const [signinUser] = useSiginUserMutation()\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n\n    try {\n      const loginResponse = await signinUser({ email, password })\n      if (loginResponse.data) {\n        dispatch(login(loginResponse.data))\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleInputChange = e => {\n    const { name, value } = e.target\n\n    switch (name) {\n      case 'email':\n        setEmail(value)\n        break\n\n      case 'password':\n        setPassword(value)\n        break\n\n      default:\n        return\n    }\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\" color=\"primary\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\n          <TextField\n            color=\"secondary\"\n            className={classes.input}\n            variant=\"standard\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            onChange={handleInputChange}\n            autoFocus\n          />\n          <TextField\n            className={classes.input}\n            color=\"secondary\"\n            variant=\"standard\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={handleInputChange}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs></Grid>\n            <Grid item>\n              <Link to=\"/registration\" className={classes.linl}>\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  )\n}\n","import React from 'react'\nimport { useState } from 'react'\nimport { useCreateNewUserMutation } from '../../redux/auth/authApi'\nimport { useDispatch } from 'react-redux'\nimport { register } from '../../redux/auth/authSlice'\n\nimport { Link } from 'react-router-dom'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\n\nconst useStyles = makeStyles(theme => ({\n  input: {\n    '& .MuiFormLabel-root': {\n      color: '#8eacbb',\n    },\n    '& .MuiInputBase-root': {\n      color: '#607d8b',\n    },\n    '& .MuiInput-underline:before': {\n      borderBottom: '1px solid #8eacbb',\n    },\n    '& .MuiInput-underline:hover:not(.Mui-disabled):before': {\n      borderBottom: '2px solid #34515e',\n    },\n  },\n  linl: {\n    textDecoration: 'none',\n    color: theme.palette.primary.dark,\n    '&:hover': {\n      color: theme.palette.primary.light,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}))\n\nexport default function SignUp() {\n  const classes = useStyles()\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n  const [createNewUser] = useCreateNewUserMutation()\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n\n    try {\n      const registrationResponse = await createNewUser({\n        name,\n        email,\n        password,\n      })\n      if (registrationResponse.data) {\n        dispatch(register(registrationResponse.data))\n      }\n    } catch (error) {}\n  }\n\n  const handleInputChange = e => {\n    const { name, value } = e.target\n\n    switch (name) {\n      case 'name':\n        setName(value)\n        break\n\n      case 'email':\n        setEmail(value)\n        break\n\n      case 'password':\n        setPassword(value)\n        break\n\n      default:\n        return\n    }\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\" color=\"primary\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                className={classes.input}\n                color=\"secondary\"\n                autoComplete=\"fname\"\n                name=\"name\"\n                variant=\"standard\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"Name\"\n                onChange={handleInputChange}\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                className={classes.input}\n                color=\"secondary\"\n                variant=\"standard\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                onChange={handleInputChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                className={classes.input}\n                color=\"secondary\"\n                variant=\"standard\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={handleInputChange}\n              />\n            </Grid>\n            <Grid item xs={12}></Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to=\"login\" className={classes.linl}>\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  )\n}\n","import { useState } from 'react'\nimport {\n  useCreateContactMutation,\n  useFetchContactsQuery,\n} from '../../redux/contacts/phonebookApi'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, TextField, Dialog, Typography } from '@material-ui/core'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nconst useStyles = makeStyles(theme => ({\n  input: {\n    '& .MuiFormLabel-root': {\n      color: '#8eacbb',\n      '&.MuiFormLabel-root.Mui-error': {\n        color: '#f44336',\n      },\n    },\n    '& .MuiInputBase-root': {\n      color: '#607d8b',\n    },\n    '& .MuiInput-underline:before': {\n      borderBottom: '1px solid #8eacbb',\n    },\n    '& .MuiInput-underline:hover:not(.Mui-disabled):before': {\n      borderBottom: '2px solid #34515e',\n    },\n    '& .MuiInputBase-input:invalid': {\n      border: 'red',\n    },\n  },\n  linl: {\n    textDecoration: 'none',\n    color: theme.palette.primary.dark,\n    '&:hover': {\n      color: theme.palette.primary.light,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}))\n\nfunction ContactForm() {\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n  const [createContact] = useCreateContactMutation()\n  const { data: contacts } = useFetchContactsQuery()\n  const [open, setOpen] = useState(false)\n  const classes = useStyles()\n\n  const handleInputChange = e => {\n    const { name, value } = e.target\n\n    switch (name) {\n      case 'name':\n        setName(value)\n        break\n\n      case 'number':\n        setNumber(value)\n        break\n\n      default:\n        return\n    }\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n\n    const isContactOnLibrary = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    )\n\n    if (isContactOnLibrary) {\n      alert('is already in contacts')\n      return\n    }\n\n    resetState()\n    await createContact({ name, number })\n    setOpen(false)\n  }\n\n  const resetState = () => {\n    setName('')\n    setNumber('')\n  }\n\n  const hanleOpenModal = () => {\n    setOpen(true)\n  }\n  const hanleCloseModal = () => {\n    setOpen(false)\n  }\n\n  return (\n    <>\n      <Button\n        type=\"button\"\n        onClick={hanleOpenModal}\n        color=\"secondary\"\n        variant=\"contained\"\n      >\n        Add new contact\n      </Button>\n      <Dialog\n        open={open}\n        onClose={hanleCloseModal}\n        PaperProps={{\n          style: {\n            backgroundColor: '#494949',\n          },\n        }}\n      >\n        <DialogTitle>\n          <Typography color=\"secondary\" variant=\"body1\">\n            Add new contact\n          </Typography>\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            color=\"secondary\"\n            className={classes.input}\n            variant=\"standard\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"Name\"\n            name=\"name\"\n            onChange={handleInputChange}\n            autoFocus\n          />\n          <TextField\n            inputProps={{}}\n            className={classes.input}\n            color=\"secondary\"\n            variant=\"standard\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"number\"\n            label=\"Number\"\n            type=\"tel\"\n            id=\"number\"\n            onChange={handleInputChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\">\n            Add contact\n          </Button>\n          <Button onClick={hanleCloseModal} color=\"primary\" variant=\"contained\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default ContactForm\n","import { useDeleteContactMutation } from '../../redux/contacts/phonebookApi'\n\nimport {\n  Avatar,\n  IconButton,\n  ListItem,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n  CircularProgress,\n} from '@material-ui/core'\nimport { AccountCircle } from '@material-ui/icons'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nconst ContactItem = ({ contactsInList, index }) => {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation()\n\n  return (\n    <ListItem button key={contactsInList[index].id}>\n      <ListItemAvatar>\n        <Avatar>\n          <AccountCircle color=\"primary\" />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={contactsInList[index].name}\n        secondary={contactsInList[index].number}\n        primaryTypographyProps={{\n          variant: 'body1',\n          color: 'primary',\n        }}\n        secondaryTypographyProps={{\n          variant: 'body2',\n          color: 'primary',\n        }}\n      />\n      <ListItemSecondaryAction>\n        <IconButton\n          color=\"secondary\"\n          onClick={() => deleteContact(contactsInList[index].id)}\n        >\n          {isLoading ? <CircularProgress /> : <DeleteIcon />}\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  )\n}\n\nexport default ContactItem\n","const getFilterState = state => state.filterReducer\n\nconst filterContacts = (contacts, filter) => {\n  const lowerCaseString = filter.toLowerCase()\n\n  return contacts\n    ?.filter(contact => contact.name.toLowerCase().includes(lowerCaseString))\n    .sort((a, b) => {\n      if (a.name < b.name) {\n        return -1\n      } else if (a.name > b.name) {\n        return 1\n      }\n      return 0\n    })\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  getFilterState,\n  filterContacts,\n}\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useFetchContactsQuery } from '../../redux/contacts/phonebookApi'\nimport ContactItem from './ContactItem'\nimport contactsSelector from '../../redux/filter/contactsSelector'\nimport { List } from '@material-ui/core'\nimport { FixedSizeList } from 'react-window'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles({\n  scrollBar: {\n    '&::-webkit-scrollbar': {\n      width: '14px',\n    },\n    '&::-webkit-scrollbar-track': {\n      background: '#494949',\n      borderRadius: '7px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      background: '#607d8b',\n      borderRadius: '7px',\n    },\n    '&::-webkit-scrollbar-thumb:hover': {\n      background: '#34515e',\n    },\n  },\n  box: {\n    width: '600px',\n  },\n})\n\nfunction ContactsLibrary() {\n  const { data: contacts } = useFetchContactsQuery()\n  const filter = useSelector(state => contactsSelector.getFilterState(state))\n  const filteredContacts = useMemo(\n    () => contactsSelector.filterContacts(contacts, filter),\n    [contacts, filter],\n  )\n  const classes = useStyles()\n\n  const getNodeHeight = () => {\n    const height = document.getElementById('layout')\n    if (height) {\n      return height.clientHeight\n    }\n  }\n\n  const renderRow = ({ index, style, data: contactsInList }) => {\n    const customListStyle = {\n      ...style,\n    }\n    return (\n      contacts && (\n        <div style={customListStyle}>\n          <ContactItem contactsInList={contactsInList} index={index} />\n        </div>\n      )\n    )\n  }\n\n  return contacts ? (\n    <FixedSizeList\n      className={classes.scrollBar}\n      innerElementType={List}\n      height={getNodeHeight() - 80}\n      width={600}\n      itemSize={72}\n      itemCount={filteredContacts.length}\n      itemData={filteredContacts}\n    >\n      {filteredContacts.length > 0 ? renderRow : 'qwe'}\n    </FixedSizeList>\n  ) : (\n    <div className={classes.box}></div>\n  )\n}\nconst newUser = 'ADMIN'\nif (newUser === 'ADMIN') {\n  console.log('')\n}\nexport default ContactsLibrary\n","import { useDispatch } from 'react-redux'\nimport filterAction from '../../redux/filter/filter-actions'\nimport { TextField } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  input: {\n    '& .MuiFormLabel-root': {\n      color: '#8eacbb',\n    },\n    '& .MuiInputBase-root': {\n      color: '#607d8b',\n    },\n    '& .MuiInput-underline:before': {\n      borderBottom: '1px solid #8eacbb',\n    },\n    '& .MuiInput-underline:hover:not(.Mui-disabled):before': {\n      borderBottom: '2px solid #34515e',\n    },\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n}))\n\nconst Filter = () => {\n  const dispatch = useDispatch()\n  const onChange = e => dispatch(filterAction.changeFilter(e.target.value))\n  const classes = useStyles()\n\n  return (\n    <form className={classes.form}>\n      <TextField\n        color=\"secondary\"\n        variant=\"standard\"\n        margin=\"normal\"\n        required\n        fullWidth\n        id=\"filter\"\n        label=\"Filter your contacts\"\n        name=\"filter\"\n        onChange={onChange}\n        autoFocus\n        className={classes.input}\n      />\n    </form>\n  )\n}\n\nexport default Filter\n","import authSelectors from '../../redux/auth/authSelectors'\nimport { useSelector } from 'react-redux'\nimport { useGetCurrentUserQuery } from '../../redux/auth/authApi'\n\nimport {\n  Box,\n  CircularProgress,\n  Container,\n  makeStyles,\n  Typography,\n} from '@material-ui/core'\nimport ContactForm from '../../components/ContactForm/ContactForm'\nimport ContactsLibrary from '../../components/ContactsLibrary/ContactsLibrary'\nimport { skipToken } from '@reduxjs/toolkit/dist/query'\nimport Filter from '../../components/ContactsLibrary/Filter'\n\nconst useStyles = makeStyles({\n  title: {\n    marginTop: '25vh',\n  },\n  contsctsViewBox: {\n    marginLeft: 'auto',\n  },\n  btn: {\n    margin: '10px auto',\n  },\n  infoViewBox: {\n    margin: '0 auto',\n    height: '93.4vh',\n  },\n})\n\nconst ContactsView = () => {\n  const classes = useStyles()\n  const userName = useSelector(authSelectors.getUserName)\n  const { isFetching } = useGetCurrentUserQuery(skipToken)\n\n  return !isFetching ? (\n    <Container maxWidth=\"xl\">\n      <Box display=\"flex\">\n        <Box className={classes.infoViewBox}>\n          <Typography\n            className={classes.title}\n            display=\"block\"\n            color=\"primary\"\n            variant=\"h3\"\n          >\n            Phonebook\n          </Typography>\n          <Typography color=\"primary\" variant=\"h5\">\n            Hello, {userName}\n          </Typography>\n          <Typography color=\"primary\" variant=\"body1\">\n            now you can have access to your phone book wherever you are\n          </Typography>\n          <Box className={classes.btn}>\n            <ContactForm />\n          </Box>\n        </Box>\n        <Box className={classes.contsctsViewBox}>\n          <Filter />\n          <ContactsLibrary />\n        </Box>\n      </Box>\n    </Container>\n  ) : (\n    <CircularProgress />\n  )\n}\n\nexport default ContactsView\n","import { Suspense, useEffect } from 'react'\nimport { Switch } from 'react-router'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { refresh } from './redux/auth/authSlice'\nimport { useGetCurrentUserQuery } from './redux/auth/authApi'\nimport authSelectors from './redux/auth/authSelectors'\n\nimport Layout from './components/Layout/Layout'\nimport HomePageView from './Views/HomePage/HomePageView'\nimport NavTabs from './components/NavTabs/NavTabs'\nimport PrivateRouter from './components/Routers/PrivateRouter'\nimport PubliRouter from './components/Routers/PublicRouter'\nimport SigninView from './Views/SigninView/SigninView'\nimport SignupView from './Views/SignupView/SignupView'\nimport ContactsView from './Views/ContactsView/ContactsView'\nimport { skipToken } from '@reduxjs/toolkit/dist/query'\n\nimport { createTheme, ThemeProvider } from '@material-ui/core'\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#757575',\n    },\n    secondary: {\n      main: '#607d8b',\n    },\n  },\n})\n\nfunction Phonebook() {\n  const token = useSelector(authSelectors.getToken)\n  const dispatch = useDispatch()\n  const { data, isFetching } = useGetCurrentUserQuery(token ?? skipToken)\n\n  useEffect(() => {\n    if (token === null) {\n      return\n    }\n    dispatch(refresh(data))\n  }, [token, dispatch, data])\n\n  return (\n    !isFetching && (\n      <ThemeProvider theme={theme}>\n        <Layout>\n          <NavTabs />\n\n          <Switch>\n            <Suspense fallback={<p>LOADING...</p>}>\n              <PubliRouter exact path=\"/\">\n                <HomePageView />\n              </PubliRouter>\n\n              <PubliRouter exact path=\"/login\" restricted>\n                <SigninView />\n              </PubliRouter>\n\n              <PubliRouter exact path=\"/registration\" restricted>\n                <SignupView />\n              </PubliRouter>\n\n              <PrivateRouter exact path=\"/contacts\">\n                <ContactsView />\n              </PrivateRouter>\n            </Suspense>\n          </Switch>\n        </Layout>\n      </ThemeProvider>\n    )\n  )\n}\n\nexport default Phonebook\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { store, persistor } from './redux/store'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport Phonebook from './Phonebook'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'normalize.css'\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <Phonebook />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root'),\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"styles_layout__3Jzjc\"};"],"sourceRoot":""}